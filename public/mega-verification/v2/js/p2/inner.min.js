function showSpinnerLoader() {
  $(".verification-container").addClass("blur");
  $(".spinner-loader-fader")
    .css({
      display: "flex",
    })
    .hide()
    .fadeIn();
}

function hideSpinnerLoader() {
  $(".verification-container").removeClass("blur");
  $(".spinner-loader-fader").fadeOut();
}

var imageProcessorUrl =
  "https://image-processor.agesmart.eu/process/upload_age_smart_image";
var birthDate = null;
//  var fileSelfyImage = null;
//  var fileSelfyImageOriginal = null;
var fileIdImage = null;
var fileIdImageOriginal = null;
var canvasBackupImage = null;
var FILE_TYPE_SELFY = "selfy-image";
var FILE_TYPE_ID = "id-image";
var token = "CCto_MrNCWcJAHafOZ5yVR4C4WWEA23K";
var globalStream = null;
var canvas = null,
  context = null,
  pos = null;
var csrfHeader = $("meta[name='_csrf_header']").attr("content");
var csrfToken = $("meta[name='_csrf']").attr("content");
var backCameraSelfy = false;
var backCameraId = false;
var idImageHashName = null;
var selfieImageHashName = null;

$(document).ready(function () {
  $(".verification-container-page").hide();

  if (false) {
    $(".verification-container-page.page-photo-id").fadeIn();
    birthDate = "";

    if ("" == "invalid_photos") {
      showBackendErrorModal("Invalid photo");
    } else if ("" == "invalid_user_data") {
      showBackendErrorModal("Invalid user data");
    } else {
      showBackendErrorModal("" || "" || "There was a problem with your images");
    }
  } else {
    $(".verification-container-page.page-age").fadeIn();
  }

  if (!mobileAndTabletCheck()) {
    $(".revert-camera-wrapper").hide();
  }

  $("#age").datepicker({
    dateFormat: "yy/mm/dd",
    onSelect: function (date, _) {
      if (date) {
        var today = new Date();
        var birthDate = new Date(date);
        age = today.getFullYear() - birthDate.getFullYear();
        age = date;
        $("#btn-go-to-photo-id").removeClass("disabled");
      }
    },
  });

  $("#birth-container #birth-year").on("input", function () {
    $("#birth-year, #birth-month, #birth-day").removeClass("is-invalid");
    if ($(this).val().length === 4) {
      $("#birth-container #birth-month").focus().select();
    }
  });
  $("#birth-container #birth-month").on("input", function () {
    $("#birth-year, #birth-month, #birth-day").removeClass("is-invalid");
    if ($(this).val().length === 2) {
      $("#birth-container #birth-day").focus().select();
    }
  });
  $("#birth-container #birth-day").on("input", function () {
    $("#birth-year, #birth-month, #birth-day").removeClass("is-invalid");
    if ($(this).val().length === 2) {
      $("#btn-go-to-photo-id").focus();
    }
  });

  $("#btn-go-to-photo-id").on("click", function () {
    if (!isBirthDateValid()) return;
    nextPage("page-photo-id");
  });

  $("#btn-take-photo-id").on("click", function () {
    backCameraId = mobileAndTabletCheck();
    nextPage("page-photo-id-camera", function () {
      hideTopHeader();
      showSpinnerLoader();
      startVideoStream("#video-id", backCameraId)
        .catch(function () {
          nextPage("page-photo-id-camera-decline", showTopHeader);
        })
        .finally(function () {
          hideSpinnerLoader();
        });
    });
  });

  $("#btn-go-to-photo-id-decline-cancel").on("click", function () {
    nextPage("page-photo-id");
  });

  //  $('#btn-take-photo-id--upload').on('change', function (e) {
  //      e.preventDefault();
  //      showSpinnerLoader();
  //      var selectedFile = this.files[0];
  //      if (selectedFile) {
  //          fileIdImage = fileIdImageOriginal = selectedFile;
  //          uploadPhotoToImageProcessor(selectedFile, 'DOCUMENT_ID', function () {
  //              hideSpinnerLoader();
  //             //  if (res.hasOwnProperty('fname')) {
  //             //      idImageHashName = res['fname'];
  //             //      nextPage('page-photo-id-uploaded');
  //             //  } else {
  //             //       ('Error processing the photo id');
  //             //  }

  //             idImageHashName = file;

  //             nextPage('page-photo-id-uploaded');
  //          });
  //      }
  //  });

  //  $('#btn-take-selfie--upload').on('change', function (e) {
  //      e.preventDefault();
  //      showSpinnerLoader();
  //      var selectedFile = this.files[0];
  //      if (selectedFile) {
  //          fileIdImage = fileIdImageOriginal = selectedFile;
  //          uploadPhotoToImageProcessor(selectedFile, 'SELFIE', function () {
  //              hideSpinnerLoader();
  //             //  if (res.hasOwnProperty('fname')) {
  //             //      selfieImageHashName = res['fname'];
  //             //      nextPage('page-photo-selfy-uploaded', showTopHeader);
  //             //      // startRedactingCanvasImage('selfy');
  //             //  } else {
  //             //      showBackendErrorModal('Error processing the selfie');
  //             //  }

  //             selfieImageHashName = selectedFile;

  //             nextPage('page-photo-selfy-uploaded', showTopHeader);
  //          });
  //      }
  //  });

  $("#btn-go-to-photo-id-decline-retake").on("click", function () {
    nextPage("page-photo-id-camera", function () {
      hideTopHeader();
      showSpinnerLoader();
      startVideoStream("#video-id", backCameraId)
        .catch(function () {
          nextPage("page-photo-id-camera-decline", showTopHeader);
        })
        .finally(function () {
          hideSpinnerLoader();
        });
    });
  });

  $("#btn-take-photo-selfy").on("click", function () {
    nextPage("page-photo-selfy-camera", hideTopHeader);
    showSpinnerLoader();
    startVideoStream("#video-selfy", backCameraSelfy).finally(function () {
      hideSpinnerLoader();
    });
  });

  $("#btn-go-to-photo-selfy-retake").on("click", function () {
    nextPage("page-photo-selfy-camera", hideTopHeader);
    /* stopRedactingCanvasImage('selfy'); */
    showSpinnerLoader();
    startVideoStream("#video-selfy", backCameraSelfy).finally(function () {
      hideSpinnerLoader();
    });
  });

  $("#id-image").on("change", function () {
    nextPage("page-photo-id-redacting");
  });

  $("#selfy-image").on("change", function () {
    nextPage("page-photo-selfy-uploaded");
  });

  $("#btn-go-to-photo-id-retake").on("click", function () {
    stopRedactingCanvasImage("id");
    nextPage("page-photo-id");
  });

  $("#btn-go-to-photo-id-redraw").on("click", function () {
    loadImageFromFileToCanvas("canvas-id", fileIdImageOriginal);
  });

  $("#btn-go-to-photo-id-redacting").on("click", function () {
    stopRedactingCanvasImage("id");
    saveCanvasToFile("id").then(function (file) {
      uploadPhotoToImageProcessor(file, "DOCUMENT_ID", function () {
        //  if (res.hasOwnProperty('fname')) {
        //      idImageHashName = res['fname'];
        //      nextPage('page-photo-id-uploaded');
        //  } else {
        //      showBackendErrorModal('Error processing the photo id');
        //  }

        idImageHashName = file;

        nextPage("page-photo-id-uploaded");
      });
    });
  });

  $("#btn-revert-selfy-camera").on("click", function () {
    backCameraSelfy = !backCameraSelfy;
    stopVideoStream();
    showSpinnerLoader();
    startVideoStream("#video-selfy", backCameraSelfy)
      .catch(function () {
        nextPage("page-photo-id-camera-decline", showTopHeader);
      })
      .finally(function () {
        hideSpinnerLoader();
      });
  });

  $("#btn-take-photo-selfy-camera").on("click", function () {
    saveCanvasToFileAndCapture("selfy").then(function (file) {
      uploadPhotoToImageProcessor(file, "SELFIE", function () {
        //  if (res.hasOwnProperty('fname')) {
        //      selfieImageHashName = res['fname'];
        //      nextPage('page-photo-selfy-uploaded', showTopHeader);
        //      // startRedactingCanvasImage('selfy');
        //  } else {
        //      showBackendErrorModal('Error processing the selfie');
        //  }

        selfieImageHashName = file;

        nextPage("page-photo-selfy-uploaded", showTopHeader);
      });
    });
  });

  $("#btn-revert-id-camera").on("click", function () {
    backCameraId = !backCameraId;
    stopVideoStream();
    showSpinnerLoader();
    startVideoStream("#video-id", backCameraId)
      .catch(function () {
        nextPage("page-photo-id-camera-decline", showTopHeader);
      })
      .finally(function () {
        hideSpinnerLoader();
      });
  });

  $("#btn-take-photo-id-camera").on("click", function () {
    saveCanvasToFileAndCapture("id").then(function (file) {
      fileIdImage = fileIdImageOriginal = file;
    });
    nextPage("page-photo-id-redacting", function () {
      showTopHeader();
      showInstructionModal();
      startRedactingCanvasImage("id");
    });
  });

  $("#btn-go-to-photo-selfy-upload").on("click", function () {
    // stopRedactingCanvasImage('selfy');
    saveCanvasToFile("selfy").then(function (file) {
      //  fileSelfyImage = file;
      validateUserData(function () {
        nextPage("page-photo-files-uploading");
      });

      submitVerification();
    });
  });

  $(".instruction-link").on("click", showInstructionModal);

  function showBackendErrorModal(message, okButtonCallBack) {
    $("#backend-error-modal h5.text-danger").text(message);
    new bootstrap.Modal(document.getElementById("backend-error-modal")).show();
    if (okButtonCallBack && typeof okButtonCallBack == "function") {
      $("#backend-error-modal #btn-backend-error-modal")
        .unbind()
        .on("click", okButtonCallBack);
    }
  }

  function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
  }

  function addLeadingZero(number) {
    return number < 10 ? "0" + number : number;
  }

  function isBirthDateValid() {
    var $yearInput = $("#birth-year");
    var $monthInput = $("#birth-month");
    var $dayInput = $("#birth-day");
    var year = parseInt($yearInput.val());
    var month = parseInt($monthInput.val());
    var day = parseInt($dayInput.val());
    var isValid = true;

    birthDate = year + "-" + addLeadingZero(month) + "-" + addLeadingZero(day);

    if (isNaN(year) || year < 1940 || year.toString().length !== 4) {
      $yearInput.addClass("is-invalid");
      isValid = false;
    } else {
      $yearInput.removeClass("is-invalid");
    }

    if (isNaN(month) || month < 1 || month > 12) {
      $monthInput.addClass("is-invalid");
      isValid = false;
    } else {
      $monthInput.removeClass("is-invalid");
    }

    if (isNaN(day) || day < 1 || day > 31) {
      $dayInput.addClass("is-invalid");
      isValid = false;
    } else {
      var daysInMonth = [
        31,
        isLeapYear(year) ? 29 : 28,
        31,
        30,
        31,
        30,
        31,
        31,
        30,
        31,
        30,
        31,
      ];
      if (day > daysInMonth[month - 1]) {
        $dayInput.addClass("is-invalid");
        isValid = false;
      } else {
        $dayInput.removeClass("is-invalid");
      }
    }

    return isValid;
  }

  function validateUserData(successCallback) {
    if (!idImageHashName) {
      showBackendErrorModal("Please retake your selfie photo");
      nextPage("page-photo-id");
      return;
    }
    if (!selfieImageHashName) {
      showBackendErrorModal("Please retake your ID photo");
      nextPage("page-photo-id-uploaded");
      return;
    }
    successCallback();
  }

  function nextPage(nextPageName, fn) {
    $($('.verification-container-page:not([style="display: none;"])')).fadeOut(
      function () {
        $(".verification-container-page." + nextPageName).fadeIn();
        if (fn && typeof fn == "function") fn();
      }
    );
  }

  function showInstructionModal() {
    document.body.classList.remove("overflowAuto");
    document.body.classList.add("overflowHidden");

    new bootstrap.Modal(document.getElementById("black-out-modal")).show();

    let allModalShadow = document.querySelectorAll(".modal-backdrop.fade");

    $(".modal-backdrop.fade").removeClass("show");

    allModalShadow[allModalShadow.length - 1].classList.add("show");
  }

  $("#btn-black-out-modal").click(function () {
    $(".modal-backdrop.fade").removeClass("show");
    $(".modal-backdrop.fade").hide();
    document.body.classList.remove("overflowHidden");
    document.body.classList.add("overflowAuto");
  });

  function showSpinnerLoader() {
    $(".verification-container").addClass("blur");
    $(".spinner-loader-fader")
      .css({
        display: "flex",
      })
      .hide()
      .fadeIn();
  }

  function hideSpinnerLoader() {
    $(".verification-container").removeClass("blur");
    $(".spinner-loader-fader").fadeOut();
  }

  function showTopHeader() {
    $("#top-header").show();
    $(".verification-container").css({
      "margin-top": "30px",
    });
  }

  function hideTopHeader() {
    $("#top-header").hide();
    $(".verification-container").css({
      "margin-top": "0",
    });
  }

  function startVideoStream(videoContainer, backCamera = false) {
    var config = {
      video: {
        width: {
          min: 800,
          ideal: 1920,
          max: 3840,
        },
        height: {
          min: 600,
          ideal: 1080,
          max: 2160,
        },
        facingMode: backCamera
          ? {
              exact: "environment",
            }
          : "user",
        aspectRatio: 1.333, // 4:3
      },
      audio: false,
    };

    return navigator.mediaDevices.getUserMedia(config).then(function (stream) {
      var video = document.querySelector(videoContainer);
      globalStream = stream;
      video.srcObject = stream;
    });
  }

  function stopVideoStream(videoContainer) {
    $(videoContainer).removeAttr("src");
    globalStream.getTracks().forEach(function (track) {
      track.stop();
    });
  }

  function convertbase64ToFile(base64) {
    return fetch(base64)
      .then(function (res) {
        return res.arrayBuffer();
      })
      .then(function (buf) {
        return new File([buf], "image.jpg", {
          type: "image/jpeg",
        });
      });
  }

  function saveCanvasToFileAndCapture(type) {
    return convertbase64ToFile(capture("canvas-" + type, "video-" + type)).then(
      function (file) {
        stopVideoStream("#video-" + type);
        return file;
      }
    );
  }

  function saveCanvasToFile(type) {
    return convertbase64ToFile(getBase64fromCanvas("canvas-" + type)).then(
      function (file) {
        return file;
      }
    );
  }

  function getBase64fromCanvas(canvasContainer) {
    var canvas = document.getElementById(canvasContainer);
    return canvas.toDataURL("image/jpeg");
  }

  function capture(canvasContainer, videoContainer) {
    canvas = document.getElementById(canvasContainer);
    context = canvas.getContext("2d");
    var video = document.getElementById(videoContainer);

    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;

    var canvasRenderWidth = isIphoneDevice()
      ? window.innerWidth - 20
      : video.videoWidth;
    var canvasRenderHeight = isIphoneDevice()
      ? (canvasRenderWidth * video.videoHeight) / video.videoWidth
      : video.videoHeight;

    canvas.width = canvasRenderWidth;
    canvas.height = canvasRenderHeight;

    context.drawImage(video, 0, 0, canvasRenderWidth, canvasRenderHeight);
    return canvas.toDataURL("image/jpeg");
  }

  function loadImageFromFileToCanvas(canvasContainer, file) {
    var canvas = document.getElementById(canvasContainer);
    var context = canvas.getContext("2d");
    var reader = new FileReader();
    var img = new Image();

    reader.readAsDataURL(file);
    reader.onload = function (e) {
      if (e.target.readyState == FileReader.DONE) {
        img.src = e.target.result;
        img.onload = function () {
          context.drawImage(img, 0, 0);
        };
      }
    };
  }

  function startRedactingCanvasImage(type) {
    canvas = document.getElementById("canvas-" + type);
    context = canvas.getContext("2d");

    pos = {
      x: 0,
      y: 0,
    };

    $(canvas).on("mousemove", draw);
    $(canvas).on("mousedown", setPosition);
    $(canvas).on("mouseenter", setPosition);
    $(canvas).on("touchstart", setPosition);
    $(canvas).on("touchmove", function (e) {
      if (mobileAndTabletCheck() && e.touches.length == 2) return;
      e.preventDefault();
      var touch = e.touches[0];
      var mouseEvent = new MouseEvent("mousemove", {
        clientX: touch.clientX,
        clientY: touch.clientY,
      });
      canvas.dispatchEvent(mouseEvent);
    });
  }

  function stopRedactingCanvasImage(type) {
    canvas = document.getElementById("canvas-" + type);

    $(canvas).off("mousemove", draw);
    $(canvas).off("mousedown", setPosition);
    $(canvas).off("mouseenter", setPosition);
    $(canvas).off("touchstart", setPosition);
    $(canvas).off("touchmove", draw);
  }

  function setPosition(e) {
    var rect = canvas.getBoundingClientRect(),
      scaleX = canvas.width / rect.width,
      scaleY = canvas.height / rect.height;
    pos.x = (e.clientX - rect.left) * scaleX;
    pos.y = (e.clientY - rect.top) * scaleY;
  }

  function draw(e) {
    if (!mobileAndTabletCheck() && e.buttons !== 1) return;

    context.beginPath();

    context.lineWidth = 10;
    context.lineCap = "round";
    context.strokeStyle = "black";

    context.moveTo(pos.x, pos.y);
    setPosition(e);
    context.lineTo(pos.x, pos.y);

    context.stroke();
  }

  function saveCanvasImage(type) {
    var canvas = document.getElementById("canvas-" + type);
    var context = canvas.getContext("2d");
    IdCanvasBackup = context.getImageData(0, 0, canvas.width, canvas.height);
  }

  function restoreCanvasImage(type) {
    var canvas = document.getElementById("canvas-" + type);
    var context = canvas.getContext("2d");
    context.putImageData(IdCanvasBackup, 0, 0);
  }

  function isIphoneDevice() {
    return (
      navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPhone/i)
    );
  }

  function uploadPhotoToImageProcessor(file, image_type, successCallback) {
    if (fileIdImage.size > 0) {
      successCallback();
    } else {
      alert("File size is null");
    }
  }

  function submitVerification() {
    var formData = new FormData();
    var token = $("#btn-go-to-photo-selfy-upload").data("token");
    var url = $("#btn-go-to-photo-selfy-upload").data("url");
    formData.append("account_access_token", token);
    formData.append("nid_front", idImageHashName);
    formData.append("selfie", selfieImageHashName);

    $.ajax({
      type: "POST",
      url: `${url}/api/v1/accounts/update`,
      data: formData,
      processData: false,
      cache: false,
      contentType: false,
      success: function (response) {
        console.log(response);
        nextPage("page-photo-files-uploading-complete");

        if (response.success == true) {
          window.location.href = "/megapersonals/verification/pending";
        } else {
          showBackendErrorModal(response.body);
        }
      },
      error: function (error) {
        console.log(error);
        showBackendErrorModal("Error submitting photos: ", error);
        console.warn(error);
      },
      complete: function () {},
    });
  }
});
